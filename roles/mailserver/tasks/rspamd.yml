---
# Installs and configures the Rspamd spam filtering system.

- name: Check if Rspamd is installed
  command: /usr/local/bin/rspamd --version
  register: rspamd_installed
  changed_when: "rspamd_installed.stderr != ''"
  ignore_errors: yes
  tags:
    - dependencies

- name: Ensure repository key for Rspamd is in place
  apt_key: url=https://rspamd.com/apt-stable/gpg.key state=present
  when: ansible_architecture != "armv7l"
  tags:
    - dependencies

- name: Ensure yunohost repository key for Rspamd is in place for ARM
  apt_key: url=http://repo.yunohost.org/debian/yunohost.asc state=present
  when: ansible_architecture == "armv7l"
  tags:
    - dependencies

- name: Add Rspamd repository
  apt_repository: repo="deb https://rspamd.com/apt-stable/ {{ ansible_distribution_release }} main"
  when: ansible_architecture != "armv7l"
  tags:
    - dependencies

- name: Add yunohost Rspamd repository for ARM
  apt_repository: repo="deb http://repo.yunohost.org/debian {{ ansible_distribution_release }} stable"
  when: ansible_architecture == "armv7l"
  tags:
    - dependencies

- name: Install Redis
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items:
    - redis-server
  tags:
    - dependencies

- name: Install Rspamd build dependencies
  when: rspamd_installed is failed
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items:
    - cmake
    - ragel
    - libevent-dev
    - libfann-dev
    - libglib2.0-dev
    - libicu-dev
    - libluajit-5.1-dev
    - libmagic-dev
    - libsqlite3-dev
  tags:
    - dependencies

- name: Download Rspamd source
  when: rspamd_installed is failed
  git:
    repo: git://github.com/vstakhov/rspamd.git
    dest: /usr/local/rspamd/
    version: tags/{{ rspamd_version }} 

- name: Create Rspamd build directory
  when: rspamd_installed is failed
  file: path=/usr/local/rspamd/builddir state=directory

- name: Generate Rspamd makefile
  when: rspamd_installed is failed
  command: /usr/bin/cmake ../
  args:
    chdir: /usr/local/rspamd/builddir

- name: Build and install Rspamd source
  when: rspamd_installed is failed
  become: true
  become_user: root
  command: /usr/bin/make install
  args:
    chdir: /usr/local/rspamd/builddir
    creates: /usr/local/bin/rspamd

- name: Copy Rspamd service file into place
  template: src=etc_rspamd.service dest=/etc/systemd/system/rspamd.service owner=_rspamd group=_rspamd mode="0644"
  notify: restart rspamd

- name: Create local.d directory
  when: rspamd_installed is failed
  file: path=/usr/local/etc/rspamd/local.d state=directory

- name: Create override.d directory
  when: rspamd_installed is failed
  file: path=/usr/local/etc/rspamd/override.d state=directory

- name: Copy DMARC configuration into place
  template: src=etc_rspamd_local.d_dmarc.conf.j2 dest=/usr/local/etc/rspamd/local.d/dmarc.conf owner=root group=root mode="0644"
  notify: restart rspamd

- name: Configure Rspamd to use Redis
  copy: src=etc_rspamd_local.d_redis.conf dest=/usr/local/etc/rspamd/local.d/redis.conf owner=root group=root mode="0644"
  notify: restart rspamd

- name: Copy DKIM configuration into place
  copy: src=etc_rspamd_override.d_dkim_signing.conf dest=/usr/local/etc/rspamd/override.d/dkim_signing.conf owner=root group=root mode="0644"
  notify: restart rspamd

- name: Create dkim key directory
  file: path=/var/lib/rspamd/dkim state=directory owner=_rspamd group=_rspamd

- name: Generate DKIM keys
  shell: rspamadm dkim_keygen -s default -d {{ item.name }} -k {{ item.name }}.default.key > {{ item.name }}.default.txt
  args:
    creates: /var/lib/rspamd/dkim/{{ item.name }}.default.key
    chdir: /var/lib/rspamd/dkim/
  with_items: "{{ mail_virtual_domains }}"

- name: Start redis
  service: name=redis-server state=started
